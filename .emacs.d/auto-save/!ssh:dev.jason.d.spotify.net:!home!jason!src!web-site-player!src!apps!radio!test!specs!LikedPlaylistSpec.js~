require('./spec_helper.js');
var common = require('../modules/common.js');

describe('LikedPlaylist', function() {
  var LikedPlaylist, typeSpy, Observable, likedPl, failSpy, doneSpy, sendSpy, getSpy, getReturn;

  beforeEach(function() {
    common.include('../../builtMain.js');
    LikedPlaylist = SpotifyApi.api._modules['scripts/LikedPlaylist'].LikedPlaylist;
    Observable = models.Observable;

    var util = require('../../scripts/util.js');

    likedPl = LikedPlaylist(hermes, hermes.Schema, util, models);

    failSpy = jasmine.createSpy('fail');
    doneSpy = jasmine.createSpy('done').andCallFake(function(doneCallback) {
      doneCallback([{uri: 'spotify:user:shitballs:playlist:123'}]);
      return {fail: failSpy};
    });
    sendSpy = jasmine.createSpy('send').andReturn({done: doneSpy});
    getReturn = {send: sendSpy, method: 'foo'};
    getSpy = jasmine.createSpy('get').andReturn(getReturn);
    hermes.get = getSpy;
  });

  describe('#addToLiked', function() {
    it('calls hermes to get the liked playlist uri', function() {
      likedPl.addToLiked('spotify:track:123');
      expect(hermes.get).toHaveBeenCalledWith('hm://radio/liked-playlist', [ { name : 'LikedPlaylist', schema : {  } } ], []);
    });

    it('does not call hermes if playlist uri exists and is cached', function() {
      likedPl.addToLiked('spotify:track:123');
      expect(hermes.get).toHaveBeenCalled();
      likedPl.addToLiked('spotify:track:123');
      expect(hermes.get.callCount).toEqual(1);
    });

    // playlist uri exists already on backend
    it('loads the correct playlist properties', function() {
      var failSpy = jasmine.createSpy('fail');
      var doneSpy = jasmine.createSpy('done').andReturn({fail: failSpy});
      var loadSpy = jasmine.createSpy('load').andReturn({done: doneSpy});
      models.Playlist.fromURI = jasmine.createSpy('Playlist.fromURI').andReturn({load: loadSpy});

      likedPl.addToLiked('spotify:track:123');
      expect(loadSpy).toHaveBeenCalledWith([ 'name', 'subscribed', 'tracks' ]);
    });

    it('adds tracks to the playlist', function() {
      var addFail = jasmine.createSpy('fail');
      var addDone = jasmine.createSpy('done').andReturn({fail: addFail});
      var addSpy = jasmine.createSpy('add').andReturn({done: addDone});
      var tracksColl = {add: addSpy};
      var failSpy = jasmine.createSpy('fail');
      var doneSpy = jasmine.createSpy('done').andCallFake(function(doneCallback) {
        doneCallback({name: 'Liked from Radio', subscribed: true, tracks: tracksColl});
        return {fail: failSpy};
      });
      var loadSpy = jasmine.createSpy('load').andReturn({done: doneSpy});
      models.Playlist.fromURI = jasmine.createSpy('Playlist.fromURI').andReturn({load: loadSpy});

      likedPl.addToLiked('spotify:track:123');
      expect(addSpy).toHaveBeenCalledWith({uri: 'spotify:track:123'});
    });

    // playlist uri does not exist on backend, ie create case
    it('creates playlist if it does not exist on backend', function() {
      var failSpy = jasmine.createSpy('fail');
      var doneSpy = jasmine.createSpy('done').andCallFake(function(doneCallback) {
        doneCallback([{}]);
        return {fail: failSpy};
      });
      var sendSpy = jasmine.createSpy('send').andReturn({done: doneSpy});
      var getReturn = {send: sendSpy, method: 'foo'};
      var getSpy = jasmine.createSpy('get').andReturn(getReturn);
      hermes.get = getSpy;

      var createFail = jasmine.createSpy('fail');
      var createDone = jasmine.createSpy('done').andReturn({fail: createFail});
      models.Playlist.create = jasmine.createSpy('Playlist.create').andReturn({done: createDone});

      likedPl.addToLiked('spotify:track:123');
      expect(models.Playlist.create).toHaveBeenCalledWith('Liked from Radio');
    });

    it('creates a new playlist if it was renamed', function() {
      var addFail = jasmine.createSpy('fail');
      var addDone = jasmine.createSpy('done').andReturn({fail: addFail});
      var addSpy = jasmine.createSpy('add').andReturn({done: addDone});
      var tracksColl = {add: addSpy};
      var failSpy = jasmine.createSpy('fail');
      var doneSpy = jasmine.createSpy('done').andCallFake(function(doneCallback) {
        doneCallback({name: 'Liked from Radio', subscribed: false, tracks: tracksColl});
        return {fail: failSpy};
      });
      var loadSpy = jasmine.createSpy('load').andReturn({done: doneSpy});
      models.Playlist.fromURI = jasmine.createSpy('Playlist.fromURI').andReturn({load: loadSpy});

      var sendFail = jasmine.createSpy('fail');
      var sendDone = jasmine.createSpy('done').andCallFake(function(doneCallback) {
        doneCallback([{uri: 'spotify:user:shitballs:playlist:123'}]);
        return {fail: sendFail};
      });
      var sendSpy = jasmine.createSpy('send').andReturn({done: sendDone});
      var getReturn = {send: sendSpy, method: 'foo'};
      var getSpy = jasmine.createSpy('get').andReturn(getReturn);
      hermes.get = getSpy;

      var createFail = jasmine.createSpy('fail');
      var createDone = jasmine.createSpy('done').andReturn({fail: createFail});
      models.Playlist.create = jasmine.createSpy('Playlist.create').andReturn({done: createDone});

      likedPl.addToLiked('spotify:track:123');
      expect(models.Playlist.create).toHaveBeenCalledWith('Liked from Radio');
    });

    //TODO test storePlaylist gets called

    it('loads the correct playlist properties', function() {});

    it('adds tracks to the playlist', function() {});

  });
});